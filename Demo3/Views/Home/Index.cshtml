@{
    ViewBag.Title = "Game";
}
@section head{
    <link href="~/Content/cardflip.css" rel="stylesheet" />
    <script src="~/Scripts/handlebars-v4.0.2.js"></script>
    <script src="~/Scripts/jquery.signalR-1.0.0.js"></script>
    <script src="/signalr/hubs"></script>
}

<style>
    .list-inline li {
        padding-left: 2px;
        padding-right: 2px;
        padding-bottom: 6px;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-lg-2">
            <div style="padding: 2px">
                <h3 id="name">User</h3>
                <input type="text" id="usernameTb" class="form-control" />
                <span class="help-block" id="alert">please enter your name and click <strong>join</strong></span>
                <input type="button" id="join" value="join" class="btn btn-primary" />
                <h3>Matches</h3>
                <ul id="wins" class="list-inline">
                </ul>

            </div>
        </div>
        <div class="col-lg-10" id="board"></div>
    </div>
</div>

<script id="card-template" type="text/x-handlebars-template">
    <div class="row">
        {{#each Pieces}}
            <div id="{{Name}}" class="click panel col-lg-2">
                <div class="front">
                    <img src="/Content/img/front.jpg" >
                </div>
                <div class="back">
                    <img src="/Content/img/back.jpg" >
                </div>
            </div>
            {{#endRow @@index}}
                    <div class="col-lg-2"></div>
                 </div>
                 <div class="row">
            {{/endRow}}
        {{/each}}
    </div>
</script>

<script type="text/javascript">
    $(function () {
        //cant try join until connection established
        $("#join").attr("disabled", "disabled");
        var gameHub = $.connection.gameHub;

        $.connection.hub.start().done(function () {
            $("#join").removeAttr("disabled");

        });

        $("#join").click(function () {
            var un = $("#usernameTb").val();
            gameHub.server.join(un);
        });


        //disable rejoining after join success
        var userid;
        gameHub.client.playerJoined = function (user) {
            debugger;
            userid = user.Id;
            $("#usernameTb").attr("disabled", "disabled");
            $("#join").attr("disabled", "disabled");
        };


        Handlebars.registerHelper('endRow', function (conditional, options) {
            if ((conditional + 1) % 5 == 0 && conditional > 0) {
                return options.fn(this);

            }
            return "";
        });

        gameHub.client.buildBoard = function (game) {
            var template = Handlebars.compile($('#card-template').html());
            $("#board").html(template(game.Board));

            if (userId == game.WhosTurn) {
                $("#alert").html("you begin");
            }
            else {
                $("#alert").html("your opponent begin");
            }

            $("div[id^=card-]").click(function (e) {
                e.preventDefault();

                var id = this.id;
                var card = $("#" + id);

                if (!card.hasClass('match') && !card.hasClass('flip')) {
                    gameHub.server.flip(id).done(function (result) {
                        if (result) {
                            gameHub.server.checkCard(id);
                        }
                    });
                }
            });
        }

        gameHub.client.flipCard = function (card) {
            var c = $("#card-" + card.id);
            $(c).addClass('flip');
        }

        gameHub.client.resetFlip= function (cardA, cardB) {
            var cA = $("#card-" + cardA.id);
            var cB = $("#card-" + cardB.id);
            
            var delay = setTimeout(function () {
                $(cA).removeClass('flip');
                $(cB).removeClass('flip');

            }, 1500);
        }

        gameHub.client.showMatch = function (card,winner) {
            $("#card-" + card.Id).addClass("match");
            $("#card-" + card.Pair).addClass("match");

            $("#alert").html("<strong> Yay </strong> " + winner + " found a match");
            if (winner == $("usernameTb").val()) {
                $("#wins").append("<li> <img src='" + card.Image + "' width='30' height='30'></li>");
            }
        }

        gameHub.client.winner = function (card,winner) {
            $("#card-" + card.Id).addClass("match");
            $("#card-" + card.Pair).addClass("match");

            $("#alert").html("<strong> Yay </strong> " + winner + " found a match");
            if (winner == $("usernameTb").val()) {
                alert("You won");
            }
            else {
                alert("you loose :(");
            }

            //restating all/
        }

        gameHub.client.waitingList = function () {
            debugger;
            $("#alert").html("youre in waiting list now, ASAP you start a game");
        }

    });
</script>

@*<script id="card-template" type="text/x-handlebars-template">
    <div class="row">
        {{#each Pieces}}
            <div id="{{Name}}" class="click panel col-lg-2">
                <div class="front">
                    <img src="/Content/img/back.jpg" >
                </div>
                <div class="back">
                    <img src="/Content/img/front.jpg" >
                </div>
            </div>
            {{#endRow @@index}}
                    <div class="col-lg-2"></div>
                 </div>
                 <div class="row">
            {{/endRow}}
        {{/each}}
    </div>
</script>*@



<script type="text/javascript">
    //$(function () {

    //    Handlebars.registerHelper('endRow', function (conditional, options) {
    //        if ((conditional+1)% 5 == 0 && conditional > 0 ) {
    //            return options.fn(this);

    //        }
    //        return "";
    //    });

    //    var game = { Pieces: new Array() };
    //    game.Pieces[0] = { Name: 'card-1' };
    //    game.Pieces[1] = { Name: 'card-2' };
    //    game.Pieces[2] = { Name: 'card-3' };
    //    game.Pieces[3] = { Name: 'card-4' };
    //    game.Pieces[4] = { Name: 'card-5' };
    //    game.Pieces[5] = { Name: 'card-6' };
    //    game.Pieces[6] = { Name: 'card-7' };
    //    game.Pieces[7] = { Name: 'card-8' };
    //    game.Pieces[8] = { Name: 'card-9' };
    //    game.Pieces[9] = { Name: 'card-10' };
    //    game.Pieces[10] = { Name: 'card-11' };
    //    game.Pieces[11] = { Name: 'card-12' };
    //    game.Pieces[12] = { Name: 'card-13' };
    //    game.Pieces[13] = { Name: 'card-14' };
    //    game.Pieces[14] = { Name: 'card-15' };

    //    var template = Handlebars.compile($('#card-template').html());
    //    $("#board").html(template(game));

    //    $('div[id^=card-]').toggle(function (e) {
    //        $(this).addClass('flip');
    //    }, function () {
    //        $(this).removeClass('flip');
    //    });
    //})
</script>

